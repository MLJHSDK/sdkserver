<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sdkserver.sso.mapper.GameMapper">
  <resultMap id="BaseResultMap" type="com.sdkserver.sso.model.Game">
    <id column="app_id" jdbcType="INTEGER" property="appId" />
    <id column="pay_callback" jdbcType="VARCHAR" property="payCallback" />
    <result column="app_key" jdbcType="VARCHAR" property="appKey" />
    <result column="app_secret" jdbcType="VARCHAR" property="appSecret" />
    <result column="app_rsa_pubkey" jdbcType="VARCHAR" property="appRsaPubkey" />
    <result column="app_rsa_prikey" jdbcType="VARCHAR" property="appRsaPrikey" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="pay_callback_debug" jdbcType="VARCHAR" property="payCallbackDebug" />
    <result column="msdk_pay_callback" jdbcType="VARCHAR" property="msdkPayCallback" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <kind id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </kind>
  <kind id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </kind>
  <kind id="Base_Column_List">
    app_id, pay_callback, app_key, app_secret, app_rsa_pubkey, app_rsa_prikey, name, 
    pay_callback_debug, msdk_pay_callback, create_time
  </kind>
  <select id="selectByExample" parameterType="com.sdkserver.sso.model.GameExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ml_game
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.sdkserver.sso.model.GameKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ml_game
    where app_id = #{appId,jdbcType=INTEGER}
      and pay_callback = #{payCallback,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.sdkserver.sso.model.GameKey">
    delete from ml_game
    where app_id = #{appId,jdbcType=INTEGER}
      and pay_callback = #{payCallback,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.sdkserver.sso.model.GameExample">
    delete from ml_game
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sdkserver.sso.model.Game">
    insert into ml_game (app_id, pay_callback, app_key, 
      app_secret, app_rsa_pubkey, app_rsa_prikey, 
      name, pay_callback_debug, msdk_pay_callback, 
      create_time)
    values (#{appId,jdbcType=INTEGER}, #{payCallback,jdbcType=VARCHAR}, #{appKey,jdbcType=VARCHAR}, 
      #{appSecret,jdbcType=VARCHAR}, #{appRsaPubkey,jdbcType=VARCHAR}, #{appRsaPrikey,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{payCallbackDebug,jdbcType=VARCHAR}, #{msdkPayCallback,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sdkserver.sso.model.Game">
    insert into ml_game
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="appId != null">
        app_id,
      </if>
      <if test="payCallback != null">
        pay_callback,
      </if>
      <if test="appKey != null">
        app_key,
      </if>
      <if test="appSecret != null">
        app_secret,
      </if>
      <if test="appRsaPubkey != null">
        app_rsa_pubkey,
      </if>
      <if test="appRsaPrikey != null">
        app_rsa_prikey,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="payCallbackDebug != null">
        pay_callback_debug,
      </if>
      <if test="msdkPayCallback != null">
        msdk_pay_callback,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="appId != null">
        #{appId,jdbcType=INTEGER},
      </if>
      <if test="payCallback != null">
        #{payCallback,jdbcType=VARCHAR},
      </if>
      <if test="appKey != null">
        #{appKey,jdbcType=VARCHAR},
      </if>
      <if test="appSecret != null">
        #{appSecret,jdbcType=VARCHAR},
      </if>
      <if test="appRsaPubkey != null">
        #{appRsaPubkey,jdbcType=VARCHAR},
      </if>
      <if test="appRsaPrikey != null">
        #{appRsaPrikey,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="payCallbackDebug != null">
        #{payCallbackDebug,jdbcType=VARCHAR},
      </if>
      <if test="msdkPayCallback != null">
        #{msdkPayCallback,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sdkserver.sso.model.GameExample" resultType="java.lang.Integer">
    select count(*) from ml_game
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ml_game
    <set>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=INTEGER},
      </if>
      <if test="record.payCallback != null">
        pay_callback = #{record.payCallback,jdbcType=VARCHAR},
      </if>
      <if test="record.appKey != null">
        app_key = #{record.appKey,jdbcType=VARCHAR},
      </if>
      <if test="record.appSecret != null">
        app_secret = #{record.appSecret,jdbcType=VARCHAR},
      </if>
      <if test="record.appRsaPubkey != null">
        app_rsa_pubkey = #{record.appRsaPubkey,jdbcType=VARCHAR},
      </if>
      <if test="record.appRsaPrikey != null">
        app_rsa_prikey = #{record.appRsaPrikey,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.payCallbackDebug != null">
        pay_callback_debug = #{record.payCallbackDebug,jdbcType=VARCHAR},
      </if>
      <if test="record.msdkPayCallback != null">
        msdk_pay_callback = #{record.msdkPayCallback,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ml_game
    set app_id = #{record.appId,jdbcType=INTEGER},
      pay_callback = #{record.payCallback,jdbcType=VARCHAR},
      app_key = #{record.appKey,jdbcType=VARCHAR},
      app_secret = #{record.appSecret,jdbcType=VARCHAR},
      app_rsa_pubkey = #{record.appRsaPubkey,jdbcType=VARCHAR},
      app_rsa_prikey = #{record.appRsaPrikey,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      pay_callback_debug = #{record.payCallbackDebug,jdbcType=VARCHAR},
      msdk_pay_callback = #{record.msdkPayCallback,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sdkserver.sso.model.Game">
    update ml_game
    <set>
      <if test="appKey != null">
        app_key = #{appKey,jdbcType=VARCHAR},
      </if>
      <if test="appSecret != null">
        app_secret = #{appSecret,jdbcType=VARCHAR},
      </if>
      <if test="appRsaPubkey != null">
        app_rsa_pubkey = #{appRsaPubkey,jdbcType=VARCHAR},
      </if>
      <if test="appRsaPrikey != null">
        app_rsa_prikey = #{appRsaPrikey,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="payCallbackDebug != null">
        pay_callback_debug = #{payCallbackDebug,jdbcType=VARCHAR},
      </if>
      <if test="msdkPayCallback != null">
        msdk_pay_callback = #{msdkPayCallback,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where app_id = #{appId,jdbcType=INTEGER}
      and pay_callback = #{payCallback,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sdkserver.sso.model.Game">
    update ml_game
    set app_key = #{appKey,jdbcType=VARCHAR},
      app_secret = #{appSecret,jdbcType=VARCHAR},
      app_rsa_pubkey = #{appRsaPubkey,jdbcType=VARCHAR},
      app_rsa_prikey = #{appRsaPrikey,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      pay_callback_debug = #{payCallbackDebug,jdbcType=VARCHAR},
      msdk_pay_callback = #{msdkPayCallback,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where app_id = #{appId,jdbcType=INTEGER}
      and pay_callback = #{payCallback,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="com.sdkserver.sso.model.Game">
    <id column="app_id" jdbcType="INTEGER" property="appId" />
    <id column="pay_callback" jdbcType="VARCHAR" property="payCallback" />
    <result column="app_key" jdbcType="VARCHAR" property="appKey" />
    <result column="app_secret" jdbcType="VARCHAR" property="appSecret" />
    <result column="app_rsa_pubkey" jdbcType="VARCHAR" property="appRsaPubkey" />
    <result column="app_rsa_prikey" jdbcType="VARCHAR" property="appRsaPrikey" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="pay_callback_debug" jdbcType="VARCHAR" property="payCallbackDebug" />
    <result column="msdk_pay_callback" jdbcType="VARCHAR" property="msdkPayCallback" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <kind id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </kind>
  <kind id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </kind>
  <kind id="Base_Column_List">
    app_id, pay_callback, app_key, app_secret, app_rsa_pubkey, app_rsa_prikey, name, 
    pay_callback_debug, msdk_pay_callback, create_time
  </kind>
  <select id="selectByExample" parameterType="com.sdkserver.sso.model.GameExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ml_game
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.sdkserver.sso.model.GameKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ml_game
    where app_id = #{appId,jdbcType=INTEGER}
      and pay_callback = #{payCallback,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.sdkserver.sso.model.GameKey">
    delete from ml_game
    where app_id = #{appId,jdbcType=INTEGER}
      and pay_callback = #{payCallback,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.sdkserver.sso.model.GameExample">
    delete from ml_game
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sdkserver.sso.model.Game">
    insert into ml_game (app_id, pay_callback, app_key, 
      app_secret, app_rsa_pubkey, app_rsa_prikey, 
      name, pay_callback_debug, msdk_pay_callback, 
      create_time)
    values (#{appId,jdbcType=INTEGER}, #{payCallback,jdbcType=VARCHAR}, #{appKey,jdbcType=VARCHAR}, 
      #{appSecret,jdbcType=VARCHAR}, #{appRsaPubkey,jdbcType=VARCHAR}, #{appRsaPrikey,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{payCallbackDebug,jdbcType=VARCHAR}, #{msdkPayCallback,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sdkserver.sso.model.Game">
    insert into ml_game
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="appId != null">
        app_id,
      </if>
      <if test="payCallback != null">
        pay_callback,
      </if>
      <if test="appKey != null">
        app_key,
      </if>
      <if test="appSecret != null">
        app_secret,
      </if>
      <if test="appRsaPubkey != null">
        app_rsa_pubkey,
      </if>
      <if test="appRsaPrikey != null">
        app_rsa_prikey,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="payCallbackDebug != null">
        pay_callback_debug,
      </if>
      <if test="msdkPayCallback != null">
        msdk_pay_callback,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="appId != null">
        #{appId,jdbcType=INTEGER},
      </if>
      <if test="payCallback != null">
        #{payCallback,jdbcType=VARCHAR},
      </if>
      <if test="appKey != null">
        #{appKey,jdbcType=VARCHAR},
      </if>
      <if test="appSecret != null">
        #{appSecret,jdbcType=VARCHAR},
      </if>
      <if test="appRsaPubkey != null">
        #{appRsaPubkey,jdbcType=VARCHAR},
      </if>
      <if test="appRsaPrikey != null">
        #{appRsaPrikey,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="payCallbackDebug != null">
        #{payCallbackDebug,jdbcType=VARCHAR},
      </if>
      <if test="msdkPayCallback != null">
        #{msdkPayCallback,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sdkserver.sso.model.GameExample" resultType="java.lang.Integer">
    select count(*) from ml_game
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ml_game
    <set>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=INTEGER},
      </if>
      <if test="record.payCallback != null">
        pay_callback = #{record.payCallback,jdbcType=VARCHAR},
      </if>
      <if test="record.appKey != null">
        app_key = #{record.appKey,jdbcType=VARCHAR},
      </if>
      <if test="record.appSecret != null">
        app_secret = #{record.appSecret,jdbcType=VARCHAR},
      </if>
      <if test="record.appRsaPubkey != null">
        app_rsa_pubkey = #{record.appRsaPubkey,jdbcType=VARCHAR},
      </if>
      <if test="record.appRsaPrikey != null">
        app_rsa_prikey = #{record.appRsaPrikey,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.payCallbackDebug != null">
        pay_callback_debug = #{record.payCallbackDebug,jdbcType=VARCHAR},
      </if>
      <if test="record.msdkPayCallback != null">
        msdk_pay_callback = #{record.msdkPayCallback,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ml_game
    set app_id = #{record.appId,jdbcType=INTEGER},
      pay_callback = #{record.payCallback,jdbcType=VARCHAR},
      app_key = #{record.appKey,jdbcType=VARCHAR},
      app_secret = #{record.appSecret,jdbcType=VARCHAR},
      app_rsa_pubkey = #{record.appRsaPubkey,jdbcType=VARCHAR},
      app_rsa_prikey = #{record.appRsaPrikey,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      pay_callback_debug = #{record.payCallbackDebug,jdbcType=VARCHAR},
      msdk_pay_callback = #{record.msdkPayCallback,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sdkserver.sso.model.Game">
    update ml_game
    <set>
      <if test="appKey != null">
        app_key = #{appKey,jdbcType=VARCHAR},
      </if>
      <if test="appSecret != null">
        app_secret = #{appSecret,jdbcType=VARCHAR},
      </if>
      <if test="appRsaPubkey != null">
        app_rsa_pubkey = #{appRsaPubkey,jdbcType=VARCHAR},
      </if>
      <if test="appRsaPrikey != null">
        app_rsa_prikey = #{appRsaPrikey,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="payCallbackDebug != null">
        pay_callback_debug = #{payCallbackDebug,jdbcType=VARCHAR},
      </if>
      <if test="msdkPayCallback != null">
        msdk_pay_callback = #{msdkPayCallback,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where app_id = #{appId,jdbcType=INTEGER}
      and pay_callback = #{payCallback,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sdkserver.sso.model.Game">
    update ml_game
    set app_key = #{appKey,jdbcType=VARCHAR},
      app_secret = #{appSecret,jdbcType=VARCHAR},
      app_rsa_pubkey = #{appRsaPubkey,jdbcType=VARCHAR},
      app_rsa_prikey = #{appRsaPrikey,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      pay_callback_debug = #{payCallbackDebug,jdbcType=VARCHAR},
      msdk_pay_callback = #{msdkPayCallback,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where app_id = #{appId,jdbcType=INTEGER}
      and pay_callback = #{payCallback,jdbcType=VARCHAR}
  </update>
</mapper>